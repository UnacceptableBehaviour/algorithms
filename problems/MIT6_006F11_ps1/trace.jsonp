parse({"input": [[5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3], [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], [7, 8, 9, 10, 11, 10, 9, 8, 7, 6, 5], [8, 9, 10, 11, 12, 11, 10, 9, 8, 7, 6], [7, 8, 9, 10, 11, 10, 9, 8, 7, 6, 5], [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], [5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3], [4, 5, 6, 7, 8, 7, 6, 5, 4, 3, 2], [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], [2, 3, 4, 5, 6, 5, 4, 3, 2, 1, 0], [1, 2, 3, 4, 5, 4, 3, 2, 1, 0, -1]], "steps": [[{"coords": [[0, 5], [1, 5], [2, 5], [3, 5], [4, 5], [5, 5], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [3, 5]}, {"type": "findingNeighbor", "coord": [3, 5]}, {"type": "foundNeighbor", "coord": [3, 4]}, {"startRow": 0, "numRows": 11, "startCol": 0, "type": "subproblem", "numCols": 5}, {"coords": [[0, 2], [1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [3, 2]}, {"type": "findingNeighbor", "coord": [3, 2]}, {"type": "foundNeighbor", "coord": [3, 3]}, {"startRow": 0, "numRows": 11, "startCol": 3, "type": "subproblem", "numCols": 2}, {"coords": [[0, 1], [1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1], [8, 1], [9, 1], [10, 1]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [3, 1]}, {"type": "findingNeighbor", "coord": [3, 1]}, {"type": "foundPeak", "coord": [3, 1]}], [{"type": "findingNeighbor", "coord": [0, 0]}, {"type": "foundNeighbor", "coord": [1, 0]}, {"type": "findingNeighbor", "coord": [1, 0]}, {"type": "foundNeighbor", "coord": [2, 0]}, {"type": "findingNeighbor", "coord": [2, 0]}, {"type": "foundNeighbor", "coord": [3, 0]}, {"type": "findingNeighbor", "coord": [3, 0]}, {"type": "foundNeighbor", "coord": [3, 1]}, {"type": "findingNeighbor", "coord": [3, 1]}, {"type": "foundNeighbor", "coord": [3, 2]}, {"type": "findingNeighbor", "coord": [3, 2]}, {"type": "foundNeighbor", "coord": [3, 3]}, {"type": "findingNeighbor", "coord": [3, 3]}, {"type": "foundNeighbor", "coord": [3, 4]}, {"type": "findingNeighbor", "coord": [3, 4]}, {"type": "foundPeak", "coord": [3, 4]}], [{"coords": [[5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [5, 9], [5, 10], [0, 5], [1, 5], [2, 5], [3, 5], [4, 5], [5, 5], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [3, 5]}, {"type": "findingNeighbor", "coord": [3, 5]}, {"type": "foundNeighbor", "coord": [3, 4]}, {"type": "bestSeen", "coord": [3, 4]}, {"startRow": 0, "numRows": 5, "startCol": 0, "type": "subproblem", "numCols": 5}, {"coords": [[2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [0, 2], [1, 2], [2, 2], [3, 2], [4, 2]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [2, 4]}, {"type": "findingNeighbor", "coord": [2, 4]}, {"type": "foundNeighbor", "coord": [3, 4]}, {"startRow": 3, "numRows": 2, "startCol": 3, "type": "subproblem", "numCols": 2}, {"coords": [[1, 0], [1, 1], [0, 1], [1, 1]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [0, 1]}, {"type": "findingNeighbor", "coord": [0, 1]}, {"type": "foundPeak", "coord": [0, 1]}], [{"coords": [[5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [5, 9], [5, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [5, 4]}, {"type": "findingNeighbor", "coord": [5, 4]}, {"type": "foundNeighbor", "coord": [4, 4]}, {"type": "bestSeen", "coord": [4, 4]}, {"startRow": 0, "numRows": 5, "startCol": 0, "type": "subproblem", "numCols": 11}, {"coords": [[0, 5], [1, 5], [2, 5], [3, 5], [4, 5]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [3, 5]}, {"type": "findingNeighbor", "coord": [3, 5]}, {"type": "foundNeighbor", "coord": [3, 4]}, {"type": "bestSeen", "coord": [3, 4]}, {"startRow": 0, "numRows": 5, "startCol": 0, "type": "subproblem", "numCols": 5}, {"coords": [[2, 0], [2, 1], [2, 2], [2, 3], [2, 4]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [2, 4]}, {"type": "findingNeighbor", "coord": [2, 4]}, {"type": "foundNeighbor", "coord": [3, 4]}, {"startRow": 3, "numRows": 2, "startCol": 0, "type": "subproblem", "numCols": 5}, {"coords": [[0, 2], [1, 2]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [0, 2]}, {"type": "findingNeighbor", "coord": [0, 2]}, {"type": "foundNeighbor", "coord": [0, 3]}, {"startRow": 3, "numRows": 2, "startCol": 3, "type": "subproblem", "numCols": 2}, {"coords": [[1, 0], [1, 1]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [1, 1]}, {"type": "findingNeighbor", "coord": [1, 1]}, {"type": "foundNeighbor", "coord": [0, 1]}, {"startRow": 3, "numRows": 1, "startCol": 3, "type": "subproblem", "numCols": 2}, {"coords": [[0, 1]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [0, 1]}, {"type": "findingNeighbor", "coord": [0, 1]}, {"type": "foundPeak", "coord": [0, 1]}], [{"coords": [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [0, 9], [0, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [0, 4]}, {"type": "bestSeen", "coord": [0, 4]}, {"coords": [[1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [1, 4]}, {"type": "bestSeen", "coord": [1, 4]}, {"coords": [[2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9], [2, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [2, 4]}, {"type": "bestSeen", "coord": [2, 4]}, {"coords": [[3, 0], [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [3, 9], [3, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [3, 4]}, {"type": "bestSeen", "coord": [3, 4]}, {"coords": [[4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [4, 4]}, {"coords": [[5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [5, 9], [5, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [5, 4]}, {"coords": [[6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [6, 4]}, {"coords": [[7, 0], [7, 1], [7, 2], [7, 3], [7, 4], [7, 5], [7, 6], [7, 7], [7, 8], [7, 9], [7, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [7, 4]}, {"coords": [[8, 0], [8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8], [8, 9], [8, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [8, 4]}, {"coords": [[9, 0], [9, 1], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [9, 7], [9, 8], [9, 9], [9, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [9, 4]}, {"coords": [[10, 0], [10, 1], [10, 2], [10, 3], [10, 4], [10, 5], [10, 6], [10, 7], [10, 8], [10, 9], [10, 10]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [10, 4]}, {"type": "foundPeak", "coord": [3, 4]}]]})